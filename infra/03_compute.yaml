AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ApplicationName:
    Type: String
    Default: imageresizer

  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, test, prod]

  LambdaCodeKey:
    Type: String
    Description: S3 key for Lambda function code

  
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ApplicationName}-${Environment}-image-processor-role' 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaDynamoS3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: 
                  !Join
                    - ""
                    - - "arn:aws:dynamodb:"
                      - !Ref "AWS::Region"
                      - ":"
                      - !Ref "AWS::AccountId"
                      - ":table/"
                      - Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-metadata-table"

              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Join
                      - ""
                      - - "arn:aws:s3:::"
                        - Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-upload-bucket"
                  - !Join
                      - ""
                      - - "arn:aws:s3:::"
                        - Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-resize-bucket"

              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Join
                      - ""
                      - - "arn:aws:s3:::"
                        - Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-upload-bucket"
                        - "/*"
                  - !Join
                      - ""
                      - - "arn:aws:s3:::"
                        - Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-resize-bucket"
                        - "/*"


  ImageProcessingLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ApplicationName}-${Environment}-image-processor'
      Handler: image_resizer.handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket:
          Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-assets-bucket"
        S3Key: !Ref LambdaCodeKey
      Runtime: python3.13
      MemorySize: 1024
      Environment:
        Variables:
          UPLOAD_BUCKET_NAME:
            Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-upload-bucket"
          RESIZE_BUCKET_NAME:
            Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-resize-bucket"
          TABLE_NAME:
            Fn::ImportValue: !Sub "${ApplicationName}-${Environment}-metadata-table"

Outputs:
  ImageProcessingLambdaArn:
    Description: "image processing lambda ARN"
    Value: !GetAtt ImageProcessingLambda.Arn
    Export:
      Name: !Sub "${ApplicationName}-${Environment}-image-processing-lambda-arn"

  ImageProcessingLambdaName:
    Description: "image processing lambda name"
    Value: !Ref ImageProcessingLambda
    Export:
      Name: !Sub "${ApplicationName}-${Environment}-image-processing-lambda-name"